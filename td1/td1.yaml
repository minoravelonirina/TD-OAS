{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Student Management API",
    "description" : "API for managing the cours of students in the school system.",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/MINORAVELONIRINA/TD1/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://app.swaggerhub.com/apis/MINORAVELONIRINA/TD1/1.0.0",
    "description" : "Server"
  } ],
  "paths" : {
    "/groups" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Get a list of groups",
        "description" : "Retrieves a list of groups with optional filters by name and groups date range.",
        "operationId" : "getGroups",
        "parameters" : [ {
          "name" : "groupName",
          "in" : "query",
          "description" : "Filter by group name.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startYear",
          "in" : "query",
          "description" : "Start year for filtering by group year.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "endYear",
          "in" : "query",
          "description" : "End year for filtering by group year.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of groups.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query parameters."
          }
        }
      },
      "put" : {
        "tags" : [ "Groups" ],
        "summary" : "Update a group",
        "description" : "Updates an existing group.",
        "operationId" : "updateGroup",
        "requestBody" : {
          "description" : "Group object to be updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Group successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "404" : {
            "description" : "Group not found."
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups" ],
        "summary" : "Delete a Group",
        "description" : "Deletes a Group by its ID.",
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "query",
          "description" : "ID of the Group to delete.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Group successfully deleted."
          },
          "404" : {
            "description" : "Group not found."
          }
        }
      }
    },
    "/students" : {
      "get" : {
        "tags" : [ "Students" ],
        "summary" : "Get a list of sudents",
        "description" : "Retrieves a list of students with optional filters by name.",
        "operationId" : "getStudent",
        "parameters" : [ {
          "name" : "studentName",
          "in" : "query",
          "description" : "Filter by student name.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of students.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Student"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query parameters."
          }
        }
      },
      "put" : {
        "tags" : [ "Students" ],
        "summary" : "Update an student",
        "description" : "Updates an existing student.",
        "operationId" : "updateStudent",
        "requestBody" : {
          "description" : "Student object to be updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Student"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Student successfully updated."
          },
          "404" : {
            "description" : "Student not found."
          }
        }
      },
      "delete" : {
        "tags" : [ "Students" ],
        "summary" : "Delete student",
        "description" : "Deletes student by their ID.",
        "operationId" : "deleteStudent",
        "parameters" : [ {
          "name" : "studentId",
          "in" : "query",
          "description" : "ID of the student to delete.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Student successfully deleted."
          },
          "404" : {
            "description" : "Student not found."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Group" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupYear" : {
            "type" : "string",
            "format" : "date"
          },
          "promotion" : {
            "type" : "string",
            "enum" : [ "G", "H", "J", "K" ]
          },
          "studentNb" : {
            "type" : "integer"
          },
          "students" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "description" : "This is the list of students in the group"
            }
          },
          "pageNumbers" : {
            "type" : "integer"
          }
        }
      },
      "Student" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "M", "F" ]
          },
          "birthdate" : {
            "type" : "string",
            "format" : "date"
          },
          "reference" : {
            "type" : "string",
            "example" : "STD23XXX"
          },
          "group" : {
            "type" : "string"
          }
        },
        "x-internal" : false
      }
    }
  }
}